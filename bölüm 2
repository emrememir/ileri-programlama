Project Euler Soruları 
Soru No 1
Soru Başlığı: 3 ve 5’in katları
Soru: 10'un altında 3 veya 5'in katları olan tüm doğal sayıları listelersek, 3, 5, 6 ve 9'u alırız. Bu katların toplamı 23'tür. 1000'in altındaki 3 veya 5'in tüm katlarının toplamını bulun.



Kod:
Function sumOfMultiple(limit){
var i, sum = 0;
for (i = 3; i < limit; i += 1) {
	if (i % 3 === 0 || i % 5 === 0) {
		sum += i;
	}
}
Return sum;
}
Console.log(sumOfMultiple(1000));
Sonuç: 233168

Soru No 11
Soru Başlığı: Bir tablodaki en büyük ürün

Soru: Aşağıdaki 20 × 20 ızgarada, çapraz çizgi boyunca dört sayı kırmızı ile işaretlenmiştir.
08 02 22 97 38 15 00 40 00 75 04 05 07 78 52 12 50 77 91 08
49 49 99 40 17 81 18 57 60 87 17 40 98 43 69 48 04 56 62 00
81 49 31 73 55 79 14 29 93 71 40 67 53 88 30 03 49 13 36 65
52 70 95 23 04 60 11 42 69 24 68 56 01 32 56 71 37 02 36 91
22 31 16 71 51 67 63 89 41 92 36 54 22 40 40 28 66 33 13 80
24 47 32 60 99 03 45 02 44 75 33 53 78 36 84 20 35 17 12 50
32 98 81 28 64 23 67 10 26 38 40 67 59 54 70 66 18 38 64 70
67 26 20 68 02 62 12 20 95 63 94 39 63 08 40 91 66 49 94 21
24 55 58 05 66 73 99 26 97 17 78 78 96 83 14 88 34 89 63 72
21 36 23 09 75 00 76 44 20 45 35 14 00 61 33 97 34 31 33 95
78 17 53 28 22 75 31 67 15 94 03 80 04 62 16 14 09 53 56 92
16 39 05 42 96 35 31 47 55 58 88 24 00 17 54 24 36 29 85 57
86 56 00 48 35 71 89 07 05 44 44 37 44 60 21 58 51 54 17 58
19 80 81 68 05 94 47 69 28 73 92 13 86 52 17 77 04 89 55 40
04 52 08 83 97 35 99 16 07 97 57 32 16 26 26 79 33 27 98 66
88 36 68 87 57 62 20 72 03 46 33 67 46 55 12 32 63 93 53 69
04 42 16 73 38 25 39 11 24 94 72 18 08 46 29 32 40 62 76 36
20 69 36 41 72 30 23 88 34 62 99 69 82 67 59 85 74 04 36 16
20 73 35 29 78 31 90 01 74 31 49 71 48 86 81 16 23 57 05 54
01 70 54 71 83 51 54 69 16 92 33 48 61 43 52 01 89 19 67 48
Bu sayıların ürünü 26 × 63 × 78 × 14 = 1788696'dır. 20 × 20 ızgarada aynı yönde (yukarı, aşağı, sola, sağa veya çapraz olarak) dört bitişik sayının en büyük ürünü nedir?
Kod:
const square =  ['08 02 22 97 38 15 00 40 00 75 04 05 07 78 52 12 50 77 91 08',
                	'49 49 99 40 17 81 18 57 60 87 17 40 98 43 69 48 04 56 62 00',
                	'81 49 31 73 55 79 14 29 93 71 40 67 53 88 30 03 49 13 36 65',
                	'52 70 95 23 04 60 11 42 69 24 68 56 01 32 56 71 37 02 36 91',
                	'22 31 16 71 51 67 63 89 41 92 36 54 22 40 40 28 66 33 13 80',
                	'24 47 32 60 99 03 45 02 44 75 33 53 78 36 84 20 35 17 12 50',
                	'32 98 81 28 64 23 67 10 26 38 40 67 59 54 70 66 18 38 64 70',
                	'67 26 20 68 02 62 12 20 95 63 94 39 63 08 40 91 66 49 94 21',
                	'24 55 58 05 66 73 99 26 97 17 78 78 96 83 14 88 34 89 63 72',
                	'21 36 23 09 75 00 76 44 20 45 35 14 00 61 33 97 34 31 33 95',
                	'78 17 53 28 22 75 31 67 15 94 03 80 04 62 16 14 09 53 56 92',
                	'16 39 05 42 96 35 31 47 55 58 88 24 00 17 54 24 36 29 85 57',
                	'86 56 00 48 35 71 89 07 05 44 44 37 44 60 21 58 51 54 17 58',
                	'19 80 81 68 05 94 47 69 28 73 92 13 86 52 17 77 04 89 55 40',
                	'04 52 08 83 97 35 99 16 07 97 57 32 16 26 26 79 33 27 98 66',
               	'88 36 68 87 57 62 20 72 03 46 33 67 46 55 12 32 63 93 53 69',
               	'04 42 16 73 38 25 39 11 24 94 72 18 08 46 29 32 40 62 76 36',
                	'20 69 36 41 72 30 23 88 34 62 99 69 82 67 59 85 74 04 36 16',
                	'20 73 35 29 78 31 90 01 74 31 49 71 48 86 81 16 23 57 05 54',
                	'01 70 54 71 83 51 54 69 16 92 33 48 61 43 52 01 89 19 67 48']

const arr = square.map(x => x.split(' ').map((x) => parseInt(x)))
let biggerProduct = 0
for(let j = 0; j < arr.length; j++) {
    for(let i = 0; i < arr[0].length; i++) {
        const currentRow = arr[j]
        const firstFactor = currentRow[i]
        if(i+3 < arr[i].length - 1) {
            const prod = firstFactor * currentRow[i+1] * currentRow[i+2] * currentRow[i+3] 
            if(prod > biggerProduct) {
                biggerProduct = prod
            }
        }
        if(j+3 < arr[i].length - 1) {
            const prod = firstFactor * arr[j+1][i] * arr[j+2][i] * arr[j+3][i]
            if(prod > biggerProduct) {
                biggerProduct = prod
            }
        }
        if(j+3 < arr[i].length - 1  && i+3 < arr[i].length - 1) {
            const prod = firstFactor * arr[j+1][i+1] * arr[j+2][i+2] * arr[j+3][i+3]
            if(prod > biggerProduct) {
                biggerProduct = prod
            }
        }
        if(j+3 < arr[i].length - 1 && i-3 >= 0) {
            const prod = firstFactor * arr[j+1][i-1] * arr[j+2][i-2] * arr[j+3][i-3]
            if(prod > biggerProduct) {
                biggerProduct = prod
            }
        }
    }
}
console.log(biggerProduct)
Sonuç: 70600674

Soru No: 41
Soru Başlığı: Pandigital prime
Soru: Var olan en büyük n- basamaklı pandigital prime nedir?


Kod: 
var time = new Date;
var buffer = [];
var greatest = 0;

function isPrime(number) {
var s = Math.sqrt(number);
for (var b = 2; b <= s; b++) {
    if (number % b === 0) {
        return false;
    }
}
return true;
}

function push(array) {
buffer.push(array.join(''));
}

function generate(length) {
var max = length;
for (var u = 1; u <= max; u++) {
    if (max === 1) {
        push([u]);
    }
    for (var i = 1; i <= max; i++) {
        if (i === u || max < 2) {
            continue;
        }
        if (max === 2) {
            push([u, i]);
        }
        for (var o = 1; o <= max; o++) {
            if (o === i || o === u || max < 3) {
                continue;
            }
            if (max === 3) {
                push([u, i, o]);
            }
            for (var p = 1; p <= max; p++) {
                if (p === i || p === o || p === u || max < 4) {
                    continue;
                }
                if (max === 4) {
                    push([u, i, o, p]);
                }
                for (var a = 1; a <= max; a++) {
                    if (a === i || a === o || a === p || a === u || max < 5) {
                        continue;
                    }
                    if (max === 5) {
                        push([u, i, o, p, a]);
                    }
                    for (var s = 1; s <= max; s++) {
                        if (s === a || s === p || s === o || s === i || s === u || max < 6) {
                            continue;
                        }
                        if (max === 6) {
                            push([u, i, o, p, a, s]);
                        }
                        for (var d = 1; d <= max; d++) {
                            if (d === s || d === a || d === p || d === o || d === i || d === u || max < 7) {
                                continue;
                            }
                            if (max === 7) {
                                push([u, i, o, p, a, s, d]);
                            }
                            for (var f = 1; f <= max; f++) {
                                if (f === d || f === s || f === a || f === p || f === o || f === i || f === u || max < 8) {
                                    continue;
                                }
                                if (max === 8) {
                                    push([u, i, o, p, a, s, d, f]);
                                }
                                for (var g = 1; g <= max; g++) {
                                   if (g === f || g === d || g === s || g === a || g === p || g === o || g === i || g === u || max < 9) 
		{
                                        continue;
                                    }
                                    push([u, i, o, p, a, s, d, f, g]);
                                }
                            }
                        }
                    }
                }}}}}}

for (var i = 1; i <= 8; i++) {
generate(i);
}

for (var i = buffer.length - 1; i >= 0; i--) {
if (isPrime(buffer[i])) {
    greatest = buffer[i];
    break;
}
}

var time1 = new Date;
console.log(greatest, 'took:', time1 - time, 'ms');

Sonuç: 7652413
